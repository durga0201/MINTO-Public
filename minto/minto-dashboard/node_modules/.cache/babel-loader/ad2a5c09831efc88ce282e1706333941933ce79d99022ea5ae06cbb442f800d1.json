{"ast":null,"code":"var _jsxFileName = \"/Users/rag9704/MINTO-Public/minto/minto-dashboard/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [experiments, setExperiments] = useState([]);\n  const [experimentName, setExperimentName] = useState('');\n  const [experimentVersion, setExperimentVersion] = useState('');\n  const [saveDir, setSaveDir] = useState('');\n  useEffect(() => {\n    // Load initial data if necessary\n  }, []);\n  const createExperiment = () => {\n    axios.post('http://localhost:5000/create_experiment', {\n      name: experimentName,\n      version: experimentVersion,\n      savedir: saveDir\n    }).then(response => {\n      alert(response.data.message);\n      // Optionally reload experiments list\n    }).catch(error => {\n      alert(error.response.data.error);\n    });\n  };\n  const runExperiment = experimentKey => {\n    axios.post('http://localhost:5000/run_experiment', {\n      experiment_key: experimentKey\n    }).then(response => {\n      alert(response.data.message);\n      // Optionally reload experiments list\n    }).catch(error => {\n      alert(error.response.data.error);\n    });\n  };\n  const logParameter = (experimentKey, parameterName, parameterValue) => {\n    axios.post('http://localhost:5000/log_parameter', {\n      experiment_key: experimentKey,\n      parameter_name: parameterName,\n      parameter_value: parameterValue\n    }).then(response => {\n      alert(response.data.message);\n      // Optionally reload experiments list\n    }).catch(error => {\n      alert(error.response.data.error);\n    });\n  };\n  const logResult = (experimentKey, resultName, resultValue) => {\n    axios.post('http://localhost:5000/log_result', {\n      experiment_key: experimentKey,\n      result_name: resultName,\n      result_value: resultValue\n    }).then(response => {\n      alert(response.data.message);\n      // Optionally reload experiments list\n    }).catch(error => {\n      alert(error.response.data.error);\n    });\n  };\n  const saveExperiment = (experimentKey, savePath) => {\n    axios.post('http://localhost:5000/save_experiment', {\n      experiment_key: experimentKey,\n      save_path: savePath\n    }).then(response => {\n      alert(response.data.message);\n      // Optionally reload experiments list\n    }).catch(error => {\n      alert(error.response.data.error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Minto Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create Experiment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Experiment Name\",\n        value: experimentName,\n        onChange: e => setExperimentName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Experiment Version\",\n        value: experimentVersion,\n        onChange: e => setExperimentVersion(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Save Directory\",\n        value: saveDir,\n        onChange: e => setSaveDir(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createExperiment,\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dksJQpxpVGjkmKOn1eC3vNWeT24=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","experiments","setExperiments","experimentName","setExperimentName","experimentVersion","setExperimentVersion","saveDir","setSaveDir","createExperiment","post","name","version","savedir","then","response","alert","data","message","catch","error","runExperiment","experimentKey","experiment_key","logParameter","parameterName","parameterValue","parameter_name","parameter_value","logResult","resultName","resultValue","result_name","result_value","saveExperiment","savePath","save_path","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/rag9704/MINTO-Public/minto/minto-dashboard/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [experiments, setExperiments] = useState([]);\n  const [experimentName, setExperimentName] = useState('');\n  const [experimentVersion, setExperimentVersion] = useState('');\n  const [saveDir, setSaveDir] = useState('');\n\n  useEffect(() => {\n    // Load initial data if necessary\n  }, []);\n\n  const createExperiment = () => {\n    axios.post('http://localhost:5000/create_experiment', {\n      name: experimentName,\n      version: experimentVersion,\n      savedir: saveDir\n    }).then(response => {\n      alert(response.data.message);\n      // Optionally reload experiments list\n    }).catch(error => {\n      alert(error.response.data.error);\n    });\n  };\n\n  const runExperiment = (experimentKey) => {\n    axios.post('http://localhost:5000/run_experiment', {\n      experiment_key: experimentKey\n    }).then(response => {\n      alert(response.data.message);\n      // Optionally reload experiments list\n    }).catch(error => {\n      alert(error.response.data.error);\n    });\n  };\n\n  const logParameter = (experimentKey, parameterName, parameterValue) => {\n    axios.post('http://localhost:5000/log_parameter', {\n      experiment_key: experimentKey,\n      parameter_name: parameterName,\n      parameter_value: parameterValue\n    }).then(response => {\n      alert(response.data.message);\n      // Optionally reload experiments list\n    }).catch(error => {\n      alert(error.response.data.error);\n    });\n  };\n\n  const logResult = (experimentKey, resultName, resultValue) => {\n    axios.post('http://localhost:5000/log_result', {\n      experiment_key: experimentKey,\n      result_name: resultName,\n      result_value: resultValue\n    }).then(response => {\n      alert(response.data.message);\n      // Optionally reload experiments list\n    }).catch(error => {\n      alert(error.response.data.error);\n    });\n  };\n\n  const saveExperiment = (experimentKey, savePath) => {\n    axios.post('http://localhost:5000/save_experiment', {\n      experiment_key: experimentKey,\n      save_path: savePath\n    }).then(response => {\n      alert(response.data.message);\n      // Optionally reload experiments list\n    }).catch(error => {\n      alert(error.response.data.error);\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Minto Dashboard</h1>\n      <div>\n        <h2>Create Experiment</h2>\n        <input type=\"text\" placeholder=\"Experiment Name\" value={experimentName} onChange={e => setExperimentName(e.target.value)} />\n        <input type=\"text\" placeholder=\"Experiment Version\" value={experimentVersion} onChange={e => setExperimentVersion(e.target.value)} />\n        <input type=\"text\" placeholder=\"Save Directory\" value={saveDir} onChange={e => setSaveDir(e.target.value)} />\n        <button onClick={createExperiment}>Create</button>\n      </div>\n      {/* Add more UI components for other functionalities like running experiment, logging data, etc. */}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}